import { Order } from '../../orders/entities/order.entity';
import { Product } from '../../products/entities/product.entity';
import { Shop } from '../../shops/entities/shop.entity';
import { User } from '../../users/entities/user.entity';
export declare class Subscription {
    id: string;
    order: Order;
    orderId: string;
    product: Product;
    productId: string;
    shop: Shop;
    shopId: string;
    customer: User;
    customerId: string;
    stripeSubscriptionId: string;
    stripeCustomerId: string;
    billingCycle: 'weekly' | 'monthly' | 'yearly';
    amount: number;
    platformFee: number;
    shopRevenue: number;
    shippingAddressLine1: string;
    shippingAddressLine2: string;
    shippingCity: string;
    shippingState: string;
    shippingCountry: string;
    shippingPostalCode: string;
    shippingCost: number;
    status: 'active' | 'cancelled' | 'past_due' | 'unpaid' | 'trialing' | 'paused';
    currentPeriodStart: Date;
    currentPeriodEnd: Date;
    cancelAtPeriodEnd: boolean;
    renewalCount: number;
    cancelledAt: Date;
    pausedAt: Date;
    pauseReason: string;
    cancellationReason: string;
    resumeAt: Date;
    createdAt: Date;
    updatedAt: Date;
    orders: Order[];
}
